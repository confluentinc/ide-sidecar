# This file is managed by ServiceBot plugin - Semaphore. The content in this file is created using a common
# template and configurations in service.yml.
# Any modifications made to version, name, agent, and global_job_config will be overwritten by the generated
# content in nightly runs. Code changes made to the remaining sections will not be affected.
# For more information, please refer to the page:
# https://confluentinc.atlassian.net/wiki/spaces/Foundations/pages/2871296194/Add+SemaphoreCI
version: v1.0
name: build-test-release
agent:
  machine:
    type: s1-prod-ubuntu20-04-amd64-1

auto_cancel:
  running:
    when: "branch != 'main'"

execution_time_limit:
  hours: 1

queue:
  - when: "branch != 'main'"
    processing: parallel

global_job_config:
  prologue:
    commands:
      - checkout
      - make ci-bin-sem-cache-restore
      - make docker-login-ci
  epilogue:
    always:
      commands:
        - make ci-bin-sem-cache-store
        - make store-test-results-to-semaphore

blocks:
  - name: "Build and Test"
    dependencies: []
    task:
      prologue:
        commands:
          - sem-version java 21
      jobs:
        - name: "Build JARs and Unit Test"
          commands:
            - make build
            - make test
        - name: "Build Native Executable and Test"
          commands:
            - make mvn-verify-native-executable

  - name: "Release"
    dependencies: ["Build and Test"]
    run:
      when: "branch =~ '.*'"
    task:
      jobs:
        - name: "Release"
          commands:
            - make release-ci
            - sem-context put release_version=$(cat .versions/ide-sidecar-version.txt)

  - name: "Update third party notices PR"
    dependencies: ["Release"]
    run:
      when: "branch =~ '.*' and change_in(['/pom.xml', '/NOTICE.txt'], {default_branch: 'main', branch_range: '$SEMAPHORE_GIT_COMMIT_RANGE', pipeline_file: 'ignore'})"
    task:
      prologue:
        commands:
          - sem-version java 21
          - . vault-setup
      jobs:
        - name: "Update Third Party Notices PR"
          commands:
            # We don't want to update the third party notices when just the pom.xml version is bumped.
            # Ugly, but it works.
            # The commit message comes from the Make target "commit-release" in mk-files/semver.mk
            - |
              LATEST_COMMIT_MESSAGE=$(git log -1 --pretty=%B $SEMAPHORE_GIT_COMMIT_RANGE)
              VERSION_BUMP_PATTERN="^chore: version bump"
              if echo "$LATEST_COMMIT_MESSAGE" | grep -q "$VERSION_BUMP_PATTERN"; then
                echo "Skipping third party notices update"
              else
                make update-third-party-notices-pr
              fi

  - name: "Build Native Executable (MacOS AMD64)"
    dependencies: ["Release"]
    run:
      when: "branch =~ '.*'"
    task:
      agent:
        machine:
          type: s1-prod-macos-13-5-amd64
      prologue:
        commands_file: build_native_executable_prologue.sh
      env_vars:
        - name: OS
          value: macos
        - name: ARCH
          value: amd64
      jobs:
        - name: "Build Native Executable (MacOS AMD64)"
          commands:
            - make mvn-package-native
            - make ci-sign-notarize-macos-executable
      epilogue:
        on_pass:
          commands_file: build_native_executable_epilogue.sh

  - name: "Build Native Executable (MacOS ARM64)"
    dependencies: ["Release"]
    run:
      when: "branch =~ '.*'"
    task:
      agent:
        machine:
          type: s1-prod-macos-13-5-arm64
      prologue:
        commands_file: build_native_executable_prologue.sh
      env_vars:
        - name: OS
          value: macos
        - name: ARCH
          value: arm64
      jobs:
        - name: "Build Native Executable (MacOS ARM64)"
          commands:
            - make mvn-package-native
            - make ci-sign-notarize-macos-executable
      epilogue:
        on_pass:
          commands_file: build_native_executable_epilogue.sh

  - name: "Build Native Executable (Linux AMD64)"
    dependencies: ["Release"]
    run:
      when: "branch =~ '.*'"
    task:
      agent:
        machine:
          type: s1-prod-ubuntu20-04-amd64-1
      prologue:
        commands_file: build_native_executable_prologue.sh
      env_vars:
        - name: OS
          value: linux
        - name: ARCH
          value: amd64
      jobs:
        - name: "Build Native Executable (Linux AMD64)"
          commands:
            - make mvn-package-native
      epilogue:
        on_pass:
          commands_file: build_native_executable_epilogue.sh

  - name: "Build Native Executable (Linux ARM64)"
    dependencies: ["Release"]
    run:
      when: "branch =~ '.*'"
    task:
      agent:
        machine:
          type: s1-prod-ubuntu20-04-arm64-1
      prologue:
        commands_file: build_native_executable_prologue.sh
      env_vars:
        - name: OS
          value: linux
        - name: ARCH
          value: arm64
      jobs:
        - name: "Build Native Executable (Linux ARM64)"
          commands:
            - make mvn-package-native
      epilogue:
        on_pass:
          commands_file: build_native_executable_epilogue.sh

  - name: "Upload native executables to GitHub Releases"
    run:
      when: "branch =~ '.*'"
    dependencies:
      - "Build Native Executable (MacOS AMD64)"
      - "Build Native Executable (MacOS ARM64)"
      - "Build Native Executable (Linux AMD64)"
      - "Build Native Executable (Linux ARM64)"
    task:
      prologue:
        commands:
          - checkout
          - git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
          - git fetch --all --tags
          - git checkout $(sem-context get release_version)
          - artifact pull workflow native-executables/
      jobs:
        - name: "Upload native executables to GitHub Releases"
          commands:
            - make upload-artifacts-to-github-release

after_pipeline:
  task:
    jobs:
      - name: Publish Test Results to Semaphore
        commands:
          - test-results gen-pipeline-report || echo "Could not publish pipeline test result report due to probably no test results to publish"

promotions:
  - name: "Windows Build Test Release"
    pipeline_file: windows.yml
    auto_promote:
      when: "result = 'passed' and branch =~ '.*'"
