{
  "api_version": "scaffold/v1",
  "data": [
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=go-consumer",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/go-consumer",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A simple Go project that reads messages from a topic in Confluent Cloud. Ideal for developers new to Kafka who want to learn about stream processing with Kafka.\n",
        "display_name": "Go Consumer Application",
        "language": "Go",
        "name": "go-consumer",
        "options": {
          "api_key": {
            "description": "The API key for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Key",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{16}$"
          },
          "api_secret": {
            "description": "The API secret for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Secret",
            "enum": null,
            "examples": null,
            "format": "password",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{64,72}$"
          },
          "auto_offset_reset": {
            "description": "What to do when there is no initial offset in the Kafka topic or if the current offset does not exist any more on the server (e.g. because that data has been deleted).",
            "display_name": "Begin Consuming From",
            "enum": [
              "earliest",
              "latest"
            ],
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "earliest",
            "min_length": 0,
            "pattern": ""
          },
          "cc_bootstrap_server": {
            "description": "One or more comma-separated host and port pairs that are the addresses where Kafka brokers accept client bootstrap requests.",
            "display_name": "Kafka Bootstrap Server",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))(,([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))*$"
          },
          "cc_topic": {
            "description": "The name of the Kafka topic to consume.",
            "display_name": "Topic Name",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^([a-zA-Z0-9._-]{1,255})$"
          },
          "group_id": {
            "description": "A unique string that identifies the consumer group this consumer belongs to. This property is required if the consumer subscribes to a topic or uses the Kafka-based offset management strategy.",
            "display_name": "Consumer Group",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^([a-zA-Z0-9._-]{1,255})$"
          }
        },
        "tags": [
          "consumer",
          "getting started",
          "go"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "0.0.1"
      }
    },
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=java-source-connector",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/java-source-connector",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A Java Source Kafka Connector Project",
        "display_name": "Java Source Connector",
        "language": "Java",
        "name": "java-source-connector",
        "options": {
          "connectorName": {
            "description": "The name of the connector",
            "display_name": "Connector Name",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 1,
            "pattern": ""
          },
          "javaVersion": {
            "description": "The version of Java to be used for the connector",
            "display_name": "Java Version",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "17",
            "min_length": 0,
            "pattern": ""
          },
          "kafkaVersion": {
            "description": "The version of Apache Kafka to be used for the connector",
            "display_name": "Kafka Version",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "3.7.0",
            "min_length": 0,
            "pattern": ""
          },
          "mavenVersion": {
            "description": "The version of Maven to be used for building the connector",
            "display_name": "Maven Version",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "3.8.4",
            "min_length": 0,
            "pattern": ""
          },
          "packageName": {
            "description": "The dot-separated name of the package",
            "display_name": "Package Name",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 1,
            "pattern": ""
          },
          "packagePath": {
            "description": "The slash-separated name of the package",
            "display_name": "Package Path",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 1,
            "pattern": ""
          }
        },
        "tags": [
          "connector",
          "source"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "0.0.1"
      }
    },
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=javascript-producer",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/javascript-producer",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A JavaScript project that produces messages to a topic in Confluent Cloud. Helps JavaScript developers new to Kafka who would like to see how a producer is made, or JavaScript developers familiar with Kafka who would like to get started developing a producer app quickly.",
        "display_name": "Simple JavaScript Producer",
        "language": "JavaScript",
        "name": "javascript-producer",
        "options": {
          "api_key": {
            "description": "The API key for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Key",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{16}$"
          },
          "api_secret": {
            "description": "The API secret for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Secret",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5DDDDDEEEEEFFFFFGGGGGHHHHHIIIIJJJJJKKKKKLLLLLMMMMM"
            ],
            "format": "password",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{64,72}$"
          },
          "cc_bootstrap_server": {
            "description": "One or more comma-separated host and port pairs that are the addresses where Kafka brokers accept client bootstrap requests.",
            "display_name": "Kafka Bootstrap Server",
            "enum": null,
            "examples": [
              "host1:9092",
              "host1:9092,host2:9092",
              "external-broker.hosted.com:9092"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))(,([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))*$"
          },
          "cc_topic": {
            "description": "The name of the Kafka topic to consume.",
            "display_name": "Topic Name",
            "enum": null,
            "examples": [
              "orders",
              "super_profitable_orders",
              "sales-event-logs"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9._-]{1,255}$"
          },
          "client_id": {
            "description": "A unique string that identifies the logical grouping of clients the application belongs to. This is not a group ID.",
            "display_name": "Client ID",
            "enum": null,
            "examples": [
              "fraud_detection",
              "customer_identification_01",
              "frequent_flyer_prospects"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9._-]{1,255}$"
          }
        },
        "tags": [
          "javascript",
          "starter",
          "producer"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "0.0.1"
      }
    },
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=kafka-streams-simple-example",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/kafka-streams-simple-example",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A simple Kafka Streams application that reads messages from a Kafka topic,  performs a simple transformation, and writes the transformed text to another topic. Ideal for developers trying to learn about Kafka Streams.\n",
        "display_name": "Kafka Streams Application",
        "language": "Java",
        "name": "kafka-streams-simple-example",
        "options": {
          "api_key": {
            "description": "The API key for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Key",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{16}$"
          },
          "api_secret": {
            "description": "The API secret for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Secret",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5DDDDDEEEEEFFFFFGGGGGHHHHHIIIIJJJJJKKKKKLLLLLMMMMM"
            ],
            "format": "password",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{64,72}$"
          },
          "cc_bootstrap_server": {
            "description": "One or more comma-separated host and port pairs that are the addresses where Kafka brokers accept client bootstrap requests.",
            "display_name": "Kafka Bootstrap Server",
            "enum": null,
            "examples": [
              "host1:9092",
              "host1:9092,host2:9092",
              "external-broker.hosted.com:9092"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))(,([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))*$"
          },
          "input_topic": {
            "description": "The name of the Kafka topic to consume.",
            "display_name": "Input Topic",
            "enum": null,
            "examples": [
              "orders"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^([a-zA-Z0-9._-]{1,255})$"
          },
          "output_topic": {
            "description": "The name of the Kafka topic to write messages.",
            "display_name": "Output Topic",
            "enum": null,
            "examples": [
              "orders_transformed",
              "super_profitable_orders"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^([a-zA-Z0-9._-]{1,255})$"
          }
        },
        "tags": [
          "kafka streams",
          "getting started",
          "java",
          "jdk"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "0.0.1"
      }
    },
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=python-producer",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/python-producer",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A simple Python project that writes messages to a topic in Confluent Cloud. Ideal for developers new to Kafka who want to learn about stream processing with Kafka.\n",
        "display_name": "Python Producer Application",
        "language": "Python",
        "name": "python-producer",
        "options": {
          "api_key": {
            "description": "The API key for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Key",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{16}$"
          },
          "api_secret": {
            "description": "The API secret for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Secret",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5DDDDDEEEEEFFFFFGGGGGHHHHHIIIIJJJJJKKKKKLLLLLMMMMM"
            ],
            "format": "password",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{64,72}$"
          },
          "cc_bootstrap_server": {
            "description": "One or more comma-separated host and port pairs that are the addresses where Kafka brokers accept client bootstrap requests.",
            "display_name": "Kafka Bootstrap Server",
            "enum": null,
            "examples": [
              "host1:9092",
              "host1:9092,host2:9092",
              "external-broker.hosted.com:9092"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))(,([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))*$"
          },
          "cc_topic": {
            "description": "The name of the Kafka topic to produce to.",
            "display_name": "Topic Name",
            "enum": null,
            "examples": [
              "orders",
              "super_profitable_orders",
              "sales-event-logs"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9._-]{1,255}$"
          }
        },
        "tags": [
          "producer",
          "getting started",
          "python"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "1.0.0"
      }
    },
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=flink-table-api-java-example",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/flink-table-api-java-example",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A simple Apache Flink®'s Table API application in Java that interacts with your Confluent Cloud resources. It contains examples but can also be used to kickstart new Table API projects. Ideal for developers trying to learn about Apache Flink®'s Table API.\n",
        "display_name": "Flink Table API Java Example",
        "language": "Java",
        "name": "flink-table-api-java-example",
        "options": {
          "cc_compute_pool_id": {
            "description": "The unique identifier for the Confluent Cloud for Apache Flink® compute pool.",
            "display_name": "Compute Pool ID",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "lfcp-xxxxxxxxxx",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          },
          "cc_environment_id": {
            "description": "The unique identifier for the Confluent Cloud environment.",
            "display_name": "Environment ID",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "env-xxxxx",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          },
          "cc_organization_id": {
            "description": "The unique identifier for the Confluent Cloud organization.",
            "display_name": "Organization ID",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "00000000-0000-0000-0000-000000000000",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          },
          "cloud_provider": {
            "description": "The name of the cloud provider.",
            "display_name": "Cloud Provider",
            "enum": [
              "AWS",
              "GCP",
              "AZURE"
            ],
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "AWS",
            "min_length": 0,
            "pattern": ""
          },
          "cloud_region": {
            "description": "The name of the cloud region.",
            "display_name": "Cloud Region",
            "enum": null,
            "examples": [
              "us-east-1",
              "us-west-1"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          },
          "flink_api_key": {
            "description": "The Confluent Cloud for Apache Flink® API key.",
            "display_name": "Flink API Key.",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          },
          "flink_api_secret": {
            "description": "The Confluent Cloud for Apache Flink® API secret.",
            "display_name": "Flink API Secret.",
            "enum": null,
            "examples": null,
            "format": "password",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          }
        },
        "tags": [
          "apache flink",
          "getting started",
          "stream processing",
          "java",
          "jdk"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "0.0.1"
      }
    },
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=flink-table-api-python-example",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/flink-table-api-python-example",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A simple Apache Flink®'s Table API application in Python that interacts with your Confluent Cloud resources. It contains examples but can also be used to kickstart new Table API projects. Ideal for developers trying to learn about Apache Flink®'s Table API.\n",
        "display_name": "Flink Table API Python Example",
        "language": "Python",
        "name": "flink-table-api-python-example",
        "options": {
          "cc_compute_pool_id": {
            "description": "The unique identifier for the Confluent Cloud for Apache Flink® compute pool.",
            "display_name": "Compute Pool ID",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "lfcp-xxxxxxxxxx",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          },
          "cc_environment_id": {
            "description": "The unique identifier for the Confluent Cloud environment.",
            "display_name": "Environment ID",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "env-xxxxx",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          },
          "cc_organization_id": {
            "description": "The unique identifier for the Confluent Cloud organization.",
            "display_name": "Organization ID",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "00000000-0000-0000-0000-000000000000",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          },
          "cloud_provider": {
            "description": "The name of the cloud provider.",
            "display_name": "Cloud Provider",
            "enum": [
              "AWS",
              "GCP",
              "AZURE"
            ],
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "AWS",
            "min_length": 0,
            "pattern": ""
          },
          "cloud_region": {
            "description": "The name of the cloud region.",
            "display_name": "Cloud Region",
            "enum": null,
            "examples": [
              "us-east-1",
              "us-west-1"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          },
          "flink_api_key": {
            "description": "The Confluent Cloud for Apache Flink® API key.",
            "display_name": "Flink API Key.",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          },
          "flink_api_secret": {
            "description": "The Confluent Cloud for Apache Flink® API secret.",
            "display_name": "Flink API Secret.",
            "enum": null,
            "examples": null,
            "format": "password",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          }
        },
        "tags": [
          "apache flink",
          "getting started",
          "stream processing",
          "python"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "0.0.1"
      }
    },
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=java-consumer",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/java-consumer",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A simple Java project that reads messages from a topic in Confluent Cloud. Ideal for developers new to Kafka who want to learn about stream processing with Kafka.\n",
        "display_name": "Java Consumer Application",
        "language": "Java",
        "name": "java-consumer",
        "options": {
          "api_key": {
            "description": "The API key for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka API Key",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{16}$"
          },
          "api_secret": {
            "description": "The API secret for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka API Secret",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5DDDDDEEEEEFFFFFGGGGGHHHHHIIIIJJJJJKKKKKLLLLLMMMMM"
            ],
            "format": "password",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{64,72}$"
          },
          "auto_offset_reset": {
            "description": "What to do when there is no initial offset in the Kafka topic or if the current offset does not exist any more on the server (e.g. because that data has been deleted).",
            "display_name": "Begin Consuming From",
            "enum": [
              "earliest",
              "latest"
            ],
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "earliest",
            "min_length": 0,
            "pattern": ""
          },
          "cc_bootstrap_server": {
            "description": "One or more comma-separated host and port pairs that are the addresses where Kafka brokers accept client bootstrap requests.",
            "display_name": "Kafka Bootstrap Server",
            "enum": null,
            "examples": [
              "host1:9092",
              "host1:9092,host2:9092",
              "external-broker.hosted.com:9092",
              "external-broker.hosted.com:9092,external-broker2.hosted.com:9092"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))(,([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))*$"
          },
          "cc_topic": {
            "description": "The name of the Kafka topic to consume.",
            "display_name": "Topic Name",
            "enum": null,
            "examples": [
              "orders",
              "super_profitable_orders",
              "sales-event-logs"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^([a-zA-Z0-9._-]{1,255})$"
          },
          "group_id": {
            "description": "A unique string that identifies the consumer group this consumer belongs to. This property is required if the consumer subscribes to a topic or uses the Kafka-based offset management strategy.",
            "display_name": "Consumer Group",
            "enum": null,
            "examples": [
              "order_fulfillment",
              "billing_consumer",
              "big_whale_customer_identification"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^([a-zA-Z0-9._-]{1,255})$"
          }
        },
        "tags": [
          "consumer",
          "getting started",
          "java",
          "jdk",
          "gradle"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "0.0.1"
      }
    },
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=java-sink-connector",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/java-sink-connector",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A Java Sink Kafka Connector Project",
        "display_name": "Java Sink Connector",
        "language": "Java",
        "name": "java-sink-connector",
        "options": {
          "connectorName": {
            "description": "The name of the connector",
            "display_name": "Connector Name",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 1,
            "pattern": ""
          },
          "javaVersion": {
            "description": "The version of Java to be used for the connector",
            "display_name": "Java Version",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "17",
            "min_length": 0,
            "pattern": ""
          },
          "kafkaVersion": {
            "description": "The version of Apache Kafka to be used for the connector",
            "display_name": "Kafka Version",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "3.7.0",
            "min_length": 0,
            "pattern": ""
          },
          "mavenVersion": {
            "description": "The version of Maven to be used for building the connector",
            "display_name": "Maven Version",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "3.8.4",
            "min_length": 0,
            "pattern": ""
          },
          "packageName": {
            "description": "The dot-separated name of the package",
            "display_name": "Package Name",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 1,
            "pattern": ""
          },
          "packagePath": {
            "description": "The slash-separated name of the package",
            "display_name": "Package Path",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 1,
            "pattern": ""
          },
          "topics": {
            "description": "One or more comma-separated Kafka topic names for the connector to consume.",
            "display_name": "Topics",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": ""
          }
        },
        "tags": [
          "connector",
          "sink"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "0.0.1"
      }
    },
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=javascript-consumer",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/javascript-consumer",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A JavaScript project that consumes messages from a topic in Confluent Cloud. Helps JavaScript developers new to Kafka who would like to see how a consumer is written, or JavaScript developers familiar with Kafka who would like to get started developing a consumer app quickly.",
        "display_name": "Simple JavaScript Consumer",
        "language": "JavaScript",
        "name": "javascript-consumer",
        "options": {
          "api_key": {
            "description": "The API key for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Key",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{16}$"
          },
          "api_secret": {
            "description": "The API secret for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Secret",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5DDDDDEEEEEFFFFFGGGGGHHHHHIIIIJJJJJKKKKKLLLLLMMMMM"
            ],
            "format": "password",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{64,72}$"
          },
          "auto_offset_reset": {
            "description": "What to do when there is no initial offset in the Kafka topic or if the current offset does not exist any more on the server (e.g. because that data has been deleted).",
            "display_name": "Begin Consuming From",
            "enum": [
              "earliest",
              "latest"
            ],
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "earliest",
            "min_length": 0,
            "pattern": ""
          },
          "cc_bootstrap_server": {
            "description": "One or more comma-separated host and port pairs that are the addresses where Kafka brokers accept client bootstrap requests.",
            "display_name": "Kafka Bootstrap Server",
            "enum": null,
            "examples": [
              "host1:9092",
              "host1:9092,host2:9092",
              "external-broker.hosted.com:9092"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))(,([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))*$"
          },
          "cc_topic": {
            "description": "The name of the Kafka topic to consume.",
            "display_name": "Topic Name",
            "enum": null,
            "examples": [
              "orders",
              "super_profitable_orders",
              "sales-event-logs"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9._-]{1,255}$"
          },
          "group_id": {
            "description": "A unique string that identifies the consumer group this consumer belongs to. This property is required if the consumer subscribes to a topic or uses the Kafka-based offset management strategy.",
            "display_name": "Consumer Group",
            "enum": null,
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^([a-zA-Z0-9._-]{1,255})$"
          }
        },
        "tags": [
          "javascript",
          "starter",
          "consumer"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "0.0.1"
      }
    },
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=python-consumer",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/python-consumer",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A simple Python project that reads messages from a topic in Confluent Cloud. Ideal for developers new to Kafka who want to learn about stream processing with Kafka.\n",
        "display_name": "Python Consumer Application",
        "language": "Python",
        "name": "python-consumer",
        "options": {
          "api_key": {
            "description": "The API key for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Key",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{16}$"
          },
          "api_secret": {
            "description": "The API secret for accessing the Kafka cluster in Confluent Cloud.",
            "display_name": "Kafka Cluster API Secret",
            "enum": null,
            "examples": [
              "AAAAABBBBBCCCCC5DDDDDEEEEEFFFFFGGGGGHHHHHIIIIJJJJJKKKKKLLLLLMMMMM"
            ],
            "format": "password",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9=\\/\\+]{64,72}$"
          },
          "auto_offset_reset": {
            "description": "What to do when there is no initial offset in the Kafka topic or if the current offset does not exist any more on the server (e.g. because that data has been deleted).",
            "display_name": "Begin Consuming From",
            "enum": [
              "earliest",
              "latest"
            ],
            "examples": null,
            "format": "",
            "hint": "",
            "initial_value": "earliest",
            "min_length": 0,
            "pattern": ""
          },
          "cc_bootstrap_server": {
            "description": "One or more comma-separated host and port pairs that are the addresses where Kafka brokers accept client bootstrap requests.",
            "display_name": "Kafka Bootstrap Server",
            "enum": null,
            "examples": [
              "host1:9092",
              "host1:9092,host2:9092",
              "external-broker.hosted.com:9092"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))(,([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-.]{0,61}[a-zA-Z0-9])[:]([0-9]{2,8}))*$"
          },
          "cc_topic": {
            "description": "The name of the Kafka topic to consume.",
            "display_name": "Topic Name",
            "enum": null,
            "examples": [
              "orders",
              "super_profitable_orders",
              "sales-event-logs"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9._-]{1,255}$"
          },
          "group_id": {
            "description": "A unique string that identifies the consumer group this consumer belongs to. This property is required if the consumer subscribes to a topic or uses the Kafka-based offset management strategy.",
            "display_name": "Consumer Group",
            "enum": null,
            "examples": [
              "order_fulfillment",
              "billing_consumer",
              "big_whale_customer_identification"
            ],
            "format": "",
            "hint": "",
            "initial_value": "",
            "min_length": 0,
            "pattern": "^[a-zA-Z0-9._-]{1,255}$"
          }
        },
        "tags": [
          "consumer",
          "getting started",
          "python"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "1.0.0"
      }
    },
    {
      "metadata": {
        "created_at": "2024-10-15T00:00:00Z",
        "resource_name": "crn://confluent.cloud/template-collection=vscode/template=source-connector-example",
        "self": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates/source-connector-example",
        "updated_at": "2024-10-15T00:00:00Z"
      },
      "spec": {
        "description": "A simple Kafka Connect source connector that emits records containing incrementing numbers. Ideal for developers that want to build a custom Kafka Connect source connector, with the basics of connector configuration, unit testing, and using state to handle task restarts gracefully.\n",
        "display_name": "Simple Source Connector",
        "language": "Java",
        "name": "source-connector-example",
        "options": {},
        "tags": [
          "kafka connect",
          "source connector",
          "getting started",
          "java",
          "jdk"
        ],
        "template_collection": {
          "id": "vscode",
          "related": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode",
          "resource_name": "crn://confluent.cloud/template-collection=vscode"
        },
        "version": "0.0.1"
      }
    }
  ],
  "kind": "TemplateList",
  "metadata": {
    "first": "https://api.confluent.cloud/scaffold/v1/template-collections/vscode/templates",
    "total_size": 12
  }
}